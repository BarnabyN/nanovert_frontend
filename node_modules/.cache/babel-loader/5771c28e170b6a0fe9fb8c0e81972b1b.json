{"ast":null,"code":"import _slicedToArray from \"/Users/barnabynapier/Documents/nanovert2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/barnabynapier/Documents/nanovert2/frontend/src/pages/VendorHomePage.js\";\nimport React from \"react\";\nimport MaterialTable from \"material-table\";\nimport { Fab } from \"@material-ui/core\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { Search, FirstPage, LastPage, Clear, ChevronLeft, ChevronRight } from \"@material-ui/icons\";\nimport { TableSortLabel } from \"@material-ui/core/\";\nimport RedeemIcon from \"@material-ui/icons/Redeem\";\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from \"reactstrap\";\n\nfunction createJson(username, firstname, lastname, email) {\n  return {\n    username: username,\n    firstname: firstname,\n    lastname: lastname,\n    email: email\n  };\n}\n\nfunction VendorHomePage() {\n  const token = localStorage.getItem(\"token\");\n  const history = useHistory();\n\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        currentVendor = _React$useState2[0],\n        setCurrentVendor = _React$useState2[1];\n\n  const _React$useState3 = React.useState([]),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        users = _React$useState4[0],\n        setUsers = _React$useState4[1];\n\n  const _React$useState5 = React.useState(true),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        collapsed = _React$useState6[0],\n        setCollapsed = _React$useState6[1];\n\n  const _React$useState7 = React.useState(\"\"),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        errorMessage = _React$useState8[0],\n        setErrorMessage = _React$useState8[1];\n\n  const toggleNavbar = () => setCollapsed(!collapsed);\n\n  React.useEffect(() => {\n    if (token) {\n      fetch(\"https://nanovert-backend.herokuapp.com/vendor-home\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(res => res.json()).then(u => {\n        setUsers(u);\n      });\n    } else {\n      history.push(\"/vendor-login\");\n    }\n  }, [token]);\n  React.useEffect(() => {\n    if (token) {\n      fetch(\"https://nanovert-backend.herokuapp.com/get-current-vendor\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(res => res.json()).then(u => {\n        setCurrentVendor(u[\"username\"]);\n      });\n    }\n  }, [token]);\n\n  function handleClaim(username, vendorname, datetime) {\n    fetch(\"https://nanovert-backend.herokuapp.com/log-claim\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        vendorname,\n        datetime\n      })\n    }).then(res => res.json()).then(res => {\n      console.log(res);\n\n      if (res.success === false) {\n        setErrorMessage(res.message);\n      } else {\n        setErrorMessage(\"\");\n        alert(\"Success! \" + username + \" claimed from \" + vendorname);\n      }\n    });\n  }\n\n  return React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      backgroundColor: \"black\",\n      color: \"white\",\n      paddingBottom: \"60%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    dark: true,\n    sticky: \"top\",\n    style: {\n      backgroundColor: \"black\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(NavbarBrand, {\n    tag: Link,\n    to: \"/\",\n    className: \"mr-auto\",\n    style: {\n      fontSize: \"30px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"nanovert\"), React.createElement(\"div\", {\n    style: {\n      marginRight: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, currentVendor), React.createElement(NavbarToggler, {\n    onClick: toggleNavbar,\n    className: \"mr-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(Collapse, {\n    isOpen: !collapsed,\n    navbar: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    navbar: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(NavItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    tag: Link,\n    onClick: () => {\n      localStorage.removeItem(\"token\");\n      history.push(\"/vendor-login\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Logout\"))))), React.createElement(MaterialTable, {\n    style: {\n      margin: \"5%\",\n      backgroundColor: \"white\"\n    },\n    title: \"Verified Users\",\n    options: {\n      defaultExpanded: true,\n      paging: false\n    },\n    icons: {\n      Search: Search,\n      FirstPage: FirstPage,\n      LastPage: LastPage,\n      PreviousPage: ChevronLeft,\n      NextPage: ChevronRight,\n      SortArrow: TableSortLabel,\n      ResetSearch: Clear\n    },\n    columns: [{\n      title: \"Username\",\n      field: \"username\"\n    }, {\n      title: \"First Name\",\n      field: \"firstname\"\n    }, {\n      title: \"Last Name\",\n      field: \"lastname\"\n    }, {\n      title: \"Email\",\n      field: \"email\"\n    }],\n    data: users.map(u => createJson(u.username, u.firstname, u.lastname, u.email)),\n    actions: [{\n      icon: \"save\",\n      tooltip: \"Save User\",\n      onClick: (event, rowData) => {\n        var d = new Date();\n        handleClaim(rowData.username, currentVendor, d);\n      }\n    }],\n    components: {\n      Action: props => React.createElement(Fab, {\n        onClick: event => props.action.onClick(event, props.data),\n        color: \"primary\",\n        variant: \"contained\",\n        style: {\n          textTransform: \"none\"\n        },\n        size: \"medium\",\n        disableElevation: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(RedeemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }));\n}\n\nexport default VendorHomePage;","map":{"version":3,"sources":["/Users/barnabynapier/Documents/nanovert2/frontend/src/pages/VendorHomePage.js"],"names":["React","MaterialTable","Fab","useHistory","Link","Search","FirstPage","LastPage","Clear","ChevronLeft","ChevronRight","TableSortLabel","RedeemIcon","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","createJson","username","firstname","lastname","email","VendorHomePage","token","localStorage","getItem","history","useState","currentVendor","setCurrentVendor","users","setUsers","collapsed","setCollapsed","errorMessage","setErrorMessage","toggleNavbar","useEffect","fetch","headers","Authorization","then","res","json","u","push","handleClaim","vendorname","datetime","method","body","JSON","stringify","console","log","success","message","alert","textAlign","backgroundColor","color","paddingBottom","fontSize","marginRight","removeItem","margin","defaultExpanded","paging","PreviousPage","NextPage","SortArrow","ResetSearch","title","field","map","icon","tooltip","onClick","event","rowData","d","Date","Action","props","action","data","textTransform"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport MaterialTable from \"material-table\";\nimport { Fab } from \"@material-ui/core\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport {\n  Search,\n  FirstPage,\n  LastPage,\n  Clear,\n  ChevronLeft,\n  ChevronRight\n} from \"@material-ui/icons\";\nimport { TableSortLabel } from \"@material-ui/core/\";\nimport RedeemIcon from \"@material-ui/icons/Redeem\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\";\n\nfunction createJson(username, firstname, lastname, email) {\n  return {\n    username: username,\n    firstname: firstname,\n    lastname: lastname,\n    email: email\n  };\n}\n\nfunction VendorHomePage() {\n  const token = localStorage.getItem(\"token\");\n  const history = useHistory();\n  const [currentVendor, setCurrentVendor] = React.useState(null);\n  const [users, setUsers] = React.useState([]);\n  const [collapsed, setCollapsed] = React.useState(true);\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n  const toggleNavbar = () => setCollapsed(!collapsed);\n\n  React.useEffect(() => {\n    if (token) {\n      fetch(\"https://nanovert-backend.herokuapp.com/vendor-home\", {\n        headers: { Authorization: `Bearer ${token}` }\n      })\n        .then(res => res.json())\n        .then(u => {\n          setUsers(u);\n        });\n    } else {\n      history.push(\"/vendor-login\");\n    }\n  }, [token]);\n\n  React.useEffect(() => {\n    if (token) {\n      fetch(\"https://nanovert-backend.herokuapp.com/get-current-vendor\", {\n        headers: { Authorization: `Bearer ${token}` }\n      })\n        .then(res => res.json())\n        .then(u => {\n          setCurrentVendor(u[\"username\"]);\n        });\n    }\n  }, [token]);\n\n  function handleClaim(username, vendorname, datetime) {\n    fetch(\"https://nanovert-backend.herokuapp.com/log-claim\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        vendorname,\n        datetime\n      })\n    })\n      .then(res => res.json())\n      .then(res => {\n        console.log(res);\n\n        if (res.success === false) {\n          setErrorMessage(res.message);\n        } else {\n          setErrorMessage(\"\");\n          alert(\"Success! \" + username + \" claimed from \" + vendorname);\n        }\n      });\n  }\n\n  return (\n    <div\n      style={{\n        textAlign: \"center\",\n        backgroundColor: \"black\",\n        color: \"white\",\n        paddingBottom: \"60%\"\n      }}\n    >\n      <Navbar dark sticky=\"top\" style={{ backgroundColor: \"black\" }}>\n        <NavbarBrand\n          tag={Link}\n          to={\"/\"}\n          className=\"mr-auto\"\n          style={{ fontSize: \"30px\" }}\n        >\n          nanovert\n        </NavbarBrand>\n        <div style={{ marginRight: \"20px\" }}>{currentVendor}</div>\n        <NavbarToggler onClick={toggleNavbar} className=\"mr-2\" />\n        <Collapse isOpen={!collapsed} navbar>\n          <Nav navbar>\n            <NavItem>\n              <NavLink\n                tag={Link}\n                onClick={() => {\n                  localStorage.removeItem(\"token\");\n                  history.push(\"/vendor-login\");\n                }}\n              >\n                Logout\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n\n      <MaterialTable\n        style={{ margin: \"5%\", backgroundColor: \"white\" }}\n        title=\"Verified Users\"\n        options={{\n          defaultExpanded: true,\n          paging: false\n        }}\n        icons={{\n          Search: Search,\n          FirstPage: FirstPage,\n          LastPage: LastPage,\n          PreviousPage: ChevronLeft,\n          NextPage: ChevronRight,\n          SortArrow: TableSortLabel,\n          ResetSearch: Clear\n        }}\n        columns={[\n          { title: \"Username\", field: \"username\" },\n          { title: \"First Name\", field: \"firstname\" },\n          { title: \"Last Name\", field: \"lastname\" },\n          { title: \"Email\", field: \"email\" }\n        ]}\n        data={users.map(u =>\n          createJson(u.username, u.firstname, u.lastname, u.email)\n        )}\n        actions={[\n          {\n            icon: \"save\",\n            tooltip: \"Save User\",\n            onClick: (event, rowData) => {\n              var d = new Date();\n              handleClaim(rowData.username, currentVendor, d);\n            }\n          }\n        ]}\n        components={{\n          Action: props => (\n            <Fab\n              onClick={event => props.action.onClick(event, props.data)}\n              color=\"primary\"\n              variant=\"contained\"\n              style={{ textTransform: \"none\" }}\n              size=\"medium\"\n              disableElevation=\"true\"\n            >\n              <RedeemIcon />\n            </Fab>\n          )\n        }}\n      />\n    </div>\n  );\n}\n\nexport default VendorHomePage;\n"]},"metadata":{},"sourceType":"module"}