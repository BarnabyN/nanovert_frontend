{"ast":null,"code":"import _slicedToArray from \"/Users/barnabynapier/Documents/nanovert/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/barnabynapier/Documents/nanovert/frontend/src/pages/HomePage.js\";\nimport React from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport HomeIcon from \"../components/HomeIcon\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nfunction HomePage() {\n  const history = useHistory();\n\n  const _React$useState = React.useState(\"\"),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        username = _React$useState2[0],\n        setUsername = _React$useState2[1];\n\n  const _React$useState3 = React.useState(\"\"),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        firstname = _React$useState4[0],\n        setFirstname = _React$useState4[1];\n\n  const _React$useState5 = React.useState(\"\"),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        lastname = _React$useState6[0],\n        setLastName = _React$useState6[1];\n\n  const _React$useState7 = React.useState(\"\"),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        email = _React$useState8[0],\n        setEmail = _React$useState8[1];\n\n  const _React$useState9 = React.useState(null),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        anchorEl = _React$useState10[0],\n        setAnchorEl = _React$useState10[1];\n\n  const _React$useState11 = React.useState(\"\"),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        errorMessage = _React$useState12[0],\n        setErrorMessage = _React$useState12[1];\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(\"http://localhost:5000/user-signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        firstname,\n        lastname,\n        email\n      })\n    }).then(res => res.json()).then(res => {\n      console.log(res);\n\n      if (res.success === false) {\n        setErrorMessage(res.message);\n      } else {\n        setErrorMessage(\"\");\n        history.push(\"/\");\n      }\n    });\n  }\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, HomeIcon(), React.createElement(Button, {\n    \"aria-controls\": \"simple-menu\",\n    \"aria-haspopup\": \"true\",\n    onClick: handleClick,\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    onClick: () => {\n      handleClose();\n      history.push(\"/vendor-login\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Vendor Login\")), React.createElement(\"p\", {\n    style: {\n      fontSize: 80\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"GET REWARDS FOR YOUR INSTAGRAM STORIES\"), React.createElement(\"p\", {\n    style: {\n      marginLeft: \"20%\",\n      marginRight: \"20%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Nanovert is a new platform connecting students with local businesses. We believe that all people should be rewarded for giving brands exposure and not just \\u201Cinfluencers\\u201D. The idea is simple\\u2026 all you have to do is post aesthetic instagram stories at local establishments, with a geo-tag for the business and you\\u2019ll be rewarded with money and freebies. \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"For businesses, we believe 100 nano-influencers can have a greater impact than one influencer for a fraction of the cost.\"), React.createElement(\"h3\", {\n    style: {\n      fontWeight: \"normal\",\n      fontSize: 25\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Sign Up\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Username\",\n    variant: \"outlined\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"First Name\",\n    variant: \"outlined\",\n    placeholder: \"First Name\",\n    value: firstname,\n    onChange: e => setFirstname(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Last Name\",\n    variant: \"outlined\",\n    placeholder: \"Last Name\",\n    value: lastname,\n    onChange: e => setLastName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Email\",\n    variant: \"outlined\",\n    placeholder: \"Email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Sign Up\"), errorMessage), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"By signing up you agree that nanovert can distribute this data to any partners of nanovert\"));\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/barnabynapier/Documents/nanovert/frontend/src/pages/HomePage.js"],"names":["React","useHistory","Link","HomeIcon","TextField","Button","MenuIcon","Menu","MenuItem","HomePage","history","useState","username","setUsername","firstname","setFirstname","lastname","setLastName","email","setEmail","anchorEl","setAnchorEl","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","console","log","success","message","push","handleClick","event","currentTarget","handleClose","textAlign","Boolean","fontSize","marginLeft","marginRight","fontWeight","target","value"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,SAASC,QAAT,GAAoB;AAChB,QAAMC,OAAO,GAAGT,UAAU,EAA1B;;AADgB,0BAGgBD,KAAK,CAACW,QAAN,CAAe,EAAf,CAHhB;AAAA;AAAA,QAGTC,QAHS;AAAA,QAGCC,WAHD;;AAAA,2BAIkBb,KAAK,CAACW,QAAN,CAAe,EAAf,CAJlB;AAAA;AAAA,QAITG,SAJS;AAAA,QAIEC,YAJF;;AAAA,2BAKgBf,KAAK,CAACW,QAAN,CAAe,EAAf,CALhB;AAAA;AAAA,QAKTK,QALS;AAAA,QAKCC,WALD;;AAAA,2BAMUjB,KAAK,CAACW,QAAN,CAAe,EAAf,CANV;AAAA;AAAA,QAMTO,KANS;AAAA,QAMFC,QANE;;AAAA,2BAOgBnB,KAAK,CAACW,QAAN,CAAe,IAAf,CAPhB;AAAA;AAAA,QAOTS,QAPS;AAAA,QAOCC,WAPD;;AAAA,4BAQwBrB,KAAK,CAACW,QAAN,CAAe,EAAf,CARxB;AAAA;AAAA,QAQTW,YARS;AAAA,QAQKC,eARL;;AAUhB,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACC,cAAF;AAEAC,IAAAA,KAAK,CAAC,mCAAD,EAAsC;AACvCC,MAAAA,MAAM,EAAE,MAD+B;AAEvCC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAF8B;AAKvCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBpB,QAAAA,QADiB;AAEjBE,QAAAA,SAFiB;AAGjBE,QAAAA,QAHiB;AAIjBE,QAAAA;AAJiB,OAAf;AALiC,KAAtC,CAAL,CAYCe,IAZD,CAYMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAZb,EAaCF,IAbD,CAaMC,GAAG,IAAI;AACTE,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;;AAEA,UAAIA,GAAG,CAACI,OAAJ,KAAgB,KAApB,EAA2B;AACvBf,QAAAA,eAAe,CAACW,GAAG,CAACK,OAAL,CAAf;AACH,OAFD,MAGK;AACDhB,QAAAA,eAAe,CAAC,EAAD,CAAf;AACAb,QAAAA,OAAO,CAAC8B,IAAR,CAAa,GAAb;AACH;AACJ,KAvBD;AAwBH;;AAED,QAAMC,WAAW,GAAGC,KAAK,IAAI;AACzBrB,IAAAA,WAAW,CAACqB,KAAK,CAACC,aAAP,CAAX;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACtBvB,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIA,SACI;AAAK,IAAA,KAAK,EAAE;AAACwB,MAAAA,SAAS,EAAC;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK1C,QAAQ,EADb,EAEI,oBAAC,MAAD;AACI,qBAAc,aADlB;AAEI,qBAAc,MAFlB;AAGI,IAAA,OAAO,EAAEsC,WAHb;AAII,IAAA,OAAO,EAAC,WAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CAFJ,EAUI,oBAAC,IAAD;AACI,IAAA,EAAE,EAAC,aADP;AAEI,IAAA,QAAQ,EAAErB,QAFd;AAGI,IAAA,WAAW,MAHf;AAII,IAAA,IAAI,EAAE0B,OAAO,CAAC1B,QAAD,CAJjB;AAKI,IAAA,OAAO,EAAEwB,WALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE,MAAM;AACrBA,MAAAA,WAAW;AACXlC,MAAAA,OAAO,CAAC8B,IAAR,CAAa,eAAb;AACH,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,CAVJ,EAwBI;AAAG,IAAA,KAAK,EAAE;AAACO,MAAAA,QAAQ,EAAC;AAAV,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAxBJ,EAyBI;AAAG,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAC,KAAZ;AAAmBC,MAAAA,WAAW,EAAC;AAA/B,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2XAzBJ,EA0BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iIA1BJ,EA4BI;AAAI,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAC,QAAZ;AAAsBH,MAAAA,QAAQ,EAAE;AAAhC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA5BJ,EA6BI;AAAM,IAAA,QAAQ,EAAEvB,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,UADV;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,KAAK,EAAEZ,QAHX;AAII,IAAA,QAAQ,EAAEa,CAAC,IAAIZ,WAAW,CAACY,CAAC,CAAC0B,MAAF,CAASC,KAAV,CAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAQI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,YADV;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,WAAW,EAAC,YAHhB;AAII,IAAA,KAAK,EAAEtC,SAJX;AAKI,IAAA,QAAQ,EAAEW,CAAC,IAAIV,YAAY,CAACU,CAAC,CAAC0B,MAAF,CAASC,KAAV,CAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,EAiBI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,WADV;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,WAAW,EAAC,WAHhB;AAII,IAAA,KAAK,EAAEpC,QAJX;AAKI,IAAA,QAAQ,EAAES,CAAC,IAAIR,WAAW,CAACQ,CAAC,CAAC0B,MAAF,CAASC,KAAV,CAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,EAwBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBJ,EAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,EA0BI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,OADV;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,WAAW,EAAC,OAHhB;AAII,IAAA,KAAK,EAAElC,KAJX;AAKI,IAAA,QAAQ,EAAEO,CAAC,IAAIN,QAAQ,CAACM,CAAC,CAAC0B,MAAF,CAASC,KAAV,CAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BJ,EAiCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCJ,EAkCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCJ,EAmCI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAnCJ,EAoCK9B,YApCL,CA7BJ,EAmEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnEJ,EAoEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kGApEJ,CADJ;AAwEH;;AAED,eAAeb,QAAf","sourcesContent":["import React from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport HomeIcon from \"../components/HomeIcon\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport MenuIcon from \"@material-ui/icons/Menu\"\nimport Menu from \"@material-ui/core/Menu\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\n\nfunction HomePage() {\n    const history = useHistory();\n\n    const [username, setUsername] = React.useState(\"\");\n    const [firstname, setFirstname] = React.useState(\"\");\n    const [lastname, setLastName] = React.useState(\"\");\n    const [email, setEmail] = React.useState(\"\");    \n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [errorMessage, setErrorMessage] = React.useState(\"\");\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        fetch(\"http://localhost:5000/user-signup\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                username,\n                firstname,\n                lastname,\n                email,\n            })\n        })\n        .then(res => res.json())\n        .then(res => {\n            console.log(res);\n\n            if (res.success === false) {\n                setErrorMessage(res.message);\n            } \n            else {\n                setErrorMessage(\"\");\n                history.push(\"/\");\n            }\n        });\n    }\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n    };\n    \n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div style={{textAlign:\"center\"}}>\n            {HomeIcon()}\n            <Button \n                aria-controls=\"simple-menu\" \n                aria-haspopup=\"true\" \n                onClick={handleClick}\n                variant=\"contained\"\n                >\n                <MenuIcon /> \n            </Button>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={() => {\n                    handleClose();\n                    history.push(\"/vendor-login\");\n                }}>\n                    Vendor Login</MenuItem>\n            </Menu>\n\n            <p style={{fontSize:80}}>GET REWARDS FOR YOUR INSTAGRAM STORIES</p>\n            <p style={{marginLeft:\"20%\", marginRight:\"20%\"}}>Nanovert is a new platform connecting students with local businesses. We believe that all people should be rewarded for giving brands exposure and not just “influencers”. The idea is simple… all you have to do is post aesthetic instagram stories at local establishments, with a geo-tag for the business and you’ll be rewarded with money and freebies. </p>\n            <p>For businesses, we believe 100 nano-influencers can have a greater impact than one influencer for a fraction of the cost.</p>\n\n            <h3 style={{fontWeight:\"normal\", fontSize: 25}}>Sign Up</h3>\n            <form onSubmit={handleSubmit}>\n                <TextField \n                    label=\"Username\" \n                    variant=\"outlined\"\n                    value={username}\n                    onChange={e => setUsername(e.target.value)} />\n                <br />\n                <br />\n                <TextField\n                    label=\"First Name\" \n                    variant=\"outlined\"\n                    placeholder=\"First Name\"\n                    value={firstname}\n                    onChange={e => setFirstname(e.target.value)}\n                />\n                <br />\n                <br />\n                <TextField\n                    label=\"Last Name\" \n                    variant=\"outlined\"\n                    placeholder=\"Last Name\"\n                    value={lastname}\n                    onChange={e => setLastName(e.target.value)}\n                />\n                <br />\n                <br />\n                <TextField\n                    label=\"Email\" \n                    variant=\"outlined\"\n                    placeholder=\"Email\"\n                    value={email}\n                    onChange={e => setEmail(e.target.value)}\n                />\n                <br />\n                <br />\n                <Button variant=\"contained\">Sign Up</Button>\n                {errorMessage}\n            </form>\n            <br />\n            <small>By signing up you agree that nanovert can distribute this data to any partners of nanovert</small>\n        </div>\n    )    \n}\n\nexport default HomePage;\n\n\n"]},"metadata":{},"sourceType":"module"}