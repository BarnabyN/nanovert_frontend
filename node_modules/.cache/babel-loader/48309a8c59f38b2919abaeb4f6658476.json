{"ast":null,"code":"import _slicedToArray from \"/Users/barnabynapier/Documents/nanovert/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/barnabynapier/Documents/nanovert/frontend/src/pages/HomePage.js\";\nimport React from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport HomeIcon from \"../components/HomeIcon\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Jumbotron, Button, Form, FormGroup, Label, Input, InputGroupAddon, InputGroupText, InputGroup } from 'reactstrap';\n\nfunction HomePage() {\n  const history = useHistory();\n\n  const _React$useState = React.useState(\"\"),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        username = _React$useState2[0],\n        setUsername = _React$useState2[1];\n\n  const _React$useState3 = React.useState(\"\"),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        firstname = _React$useState4[0],\n        setFirstname = _React$useState4[1];\n\n  const _React$useState5 = React.useState(\"\"),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        lastname = _React$useState6[0],\n        setLastName = _React$useState6[1];\n\n  const _React$useState7 = React.useState(\"\"),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        email = _React$useState8[0],\n        setEmail = _React$useState8[1];\n\n  const _React$useState9 = React.useState(\"\"),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        errorMessage = _React$useState10[0],\n        setErrorMessage = _React$useState10[1];\n\n  const _React$useState11 = React.useState(true),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        collapsed = _React$useState12[0],\n        setCollapsed = _React$useState12[1];\n\n  const toggleNavbar = () => setCollapsed(!collapsed);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(\"http://localhost:5000/user-signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        firstname,\n        lastname,\n        email\n      })\n    }).then(res => res.json()).then(res => {\n      console.log(res);\n\n      if (res.success === false) {\n        setErrorMessage(res.message);\n      } else {\n        setErrorMessage(\"\");\n        history.push(\"/\");\n      }\n    });\n  }\n\n  return React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    color: \"faded\",\n    light: true,\n    sticky: \"top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(NavbarBrand, {\n    tag: Link,\n    to: \"/\",\n    className: \"mr-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"nanovert\"), React.createElement(NavbarToggler, {\n    onClick: toggleNavbar,\n    className: \"mr-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Collapse, {\n    isOpen: !collapsed,\n    navbar: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    navbar: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(NavItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    tag: Link,\n    to: \"/vendor-login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Vendor Login\"))))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Jumbotron, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"display-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Get rewards for your Instagram stories!\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"This is a simple hero unit, a simple Jumbotron-style component for calling extra attention to featured content or information.\"), React.createElement(\"hr\", {\n    className: \"my-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"It uses utility classes for typography and spacing to space content out within the larger container.\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Learn More\")))), React.createElement(\"h1\", {\n    style: {\n      color: \"Black\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Tell Me More...\"), React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"whitesmoke\",\n      marginLeft: \"10%\",\n      marginRight: \"10%\",\n      borderRadius: \"20px\",\n      paddingTop: \"20px\",\n      paddingBottom: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: {\n      marginLeft: \"10%\",\n      marginRight: \"10%\",\n      color: \"darkslategrey\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Nanovert is a new platform connecting students with local businesses. We believe that all people should be rewarded for giving brands exposure and not just \\u201Cinfluencers\\u201D. The idea is simple\\u2026 all you have to do is post aesthetic instagram stories at local establishments, with a geo-tag for the business and you\\u2019ll be rewarded with money and freebies. \"), React.createElement(\"p\", {\n    style: {\n      marginLeft: \"10%\",\n      marginRight: \"10%\",\n      color: \"darkslategrey\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"For businesses, we believe 100 nano-influencers can have a greater impact than one influencer for a fraction of the cost.\")), React.createElement(\"h1\", {\n    style: {\n      color: \"Black\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Sign Up\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Email\"), React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(InputGroupText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"@\")), React.createElement(Input, {\n    type: \"email\",\n    name: \"email\",\n    id: \"exampleEmail\",\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }))), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Input, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    check: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Label, {\n    check: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), ' ', \"I agree nanovert can share my data with it's partners.\")), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Submit\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: {\n      color: \"darkslategrey\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"nanovertuk@gmail.com\"), React.createElement(\"small\", {\n    style: {\n      color: \"darkslategrey\",\n      paddingBottom: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Copyright \\xA9 2019 - nanovert\")));\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/barnabynapier/Documents/nanovert/frontend/src/pages/HomePage.js"],"names":["React","useHistory","Link","HomeIcon","TextField","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","Jumbotron","Button","Form","FormGroup","Label","Input","InputGroupAddon","InputGroupText","InputGroup","HomePage","history","useState","username","setUsername","firstname","setFirstname","lastname","setLastName","email","setEmail","errorMessage","setErrorMessage","collapsed","setCollapsed","toggleNavbar","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","console","log","success","message","push","textAlign","color","backgroundColor","marginLeft","marginRight","borderRadius","paddingTop","paddingBottom"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport HomeIcon from \"../components/HomeIcon\"\nimport TextField from \"@material-ui/core/TextField\"\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Jumbotron, Button, Form, FormGroup, Label, Input, InputGroupAddon, InputGroupText, InputGroup } from 'reactstrap'\n\nfunction HomePage() {\n    const history = useHistory();\n\n    const [username, setUsername] = React.useState(\"\");\n    const [firstname, setFirstname] = React.useState(\"\");\n    const [lastname, setLastName] = React.useState(\"\");\n    const [email, setEmail] = React.useState(\"\");    \n    const [errorMessage, setErrorMessage] = React.useState(\"\");\n    const [collapsed, setCollapsed] = React.useState(true);\n    const toggleNavbar = () => setCollapsed(!collapsed);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        fetch(\"http://localhost:5000/user-signup\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                username,\n                firstname,\n                lastname,\n                email,\n            })\n        })\n        .then(res => res.json())\n        .then(res => {\n            console.log(res);\n\n            if (res.success === false) {\n                setErrorMessage(res.message);\n            } \n            else {\n                setErrorMessage(\"\");\n                history.push(\"/\");\n            }\n        });\n    }\n\n\n    return (\n        <div style={{textAlign:\"center\"}}>\n\n\n\n        <Navbar color=\"faded\" light sticky=\"top\">\n        <NavbarBrand tag={Link} to={\"/\"} className=\"mr-auto\">nanovert</NavbarBrand>\n        <NavbarToggler onClick={toggleNavbar} className=\"mr-2\" />\n        <Collapse isOpen={!collapsed} navbar>\n            <Nav navbar>\n            <NavItem>\n                <NavLink tag={Link} to={\"/vendor-login\"}>Vendor Login</NavLink>\n            </NavItem>\n            </Nav>\n        </Collapse>\n        </Navbar>\n\n\n        <div>\n            <Jumbotron>\n                <h1 className=\"display-3\">Get rewards for your Instagram stories!</h1>\n                <p className=\"lead\">This is a simple hero unit, a simple Jumbotron-style component for calling extra attention to featured content or information.</p>\n                <hr className=\"my-2\" />\n                <p>It uses utility classes for typography and spacing to space content out within the larger container.</p>\n                <p className=\"lead\">\n                <Button color=\"primary\">Learn More</Button>\n                </p>\n            </Jumbotron>\n        </div>\n\n            <h1 style={{color:\"Black\"}}>Tell Me More...</h1>\n\n            <div style={{\n                backgroundColor:\"whitesmoke\",\n                marginLeft:\"10%\",\n                marginRight:\"10%\",\n                borderRadius:\"20px\",\n                paddingTop:\"20px\",\n                paddingBottom:\"20px\"\n            }}>\n                <p style={{marginLeft:\"10%\", marginRight:\"10%\", color:\"darkslategrey\"}}>Nanovert is a new platform connecting students with local businesses. We believe that all people should be rewarded for giving brands exposure and not just “influencers”. The idea is simple… all you have to do is post aesthetic instagram stories at local establishments, with a geo-tag for the business and you’ll be rewarded with money and freebies. </p>\n                <p style={{marginLeft:\"10%\", marginRight:\"10%\", color:\"darkslategrey\"}}>For businesses, we believe 100 nano-influencers can have a greater impact than one influencer for a fraction of the cost.</p>\n            </div>\n\n            <h1 style={{color:\"Black\"}}>Sign Up</h1>\n\n            <Form>\n                <FormGroup>\n                    <InputGroup>\n                        <Label for=\"Email\">Email</Label>\n                        <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>@</InputGroupText>\n                        </InputGroupAddon>\n                        <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"Email\" />\n                    </InputGroup>\n\n                    \n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"Password\">Password</Label>\n                    <Input type=\"password\" name=\"password\" placeholder=\"Password\" />\n                </FormGroup>\n                <FormGroup check>\n                    <Label check>\n                    <Input type=\"checkbox\" />{' '}\n                    I agree nanovert can share my data with it's partners.\n                    </Label>\n                </FormGroup>\n                <Button>Submit</Button>\n            </Form>\n\n            {/* <div style={{\n                backgroundColor:\"whitesmoke\",\n                marginLeft:\"10%\",\n                marginRight:\"10%\",\n                borderRadius:\"20px\",\n                paddingTop:\"20px\"\n            }}>\n                <form onSubmit={handleSubmit}>\n                    <TextField \n                        style={{backgroundColor:\"white\"}}\n                        label=\"Username\" \n                        variant=\"outlined\"\n                        value={username}\n                        onChange={e => setUsername(e.target.value)} />\n                    <br />\n                    <br />\n                    <TextField\n                        style={{backgroundColor:\"white\"}}\n                        label=\"First Name\" \n                        variant=\"outlined\"\n                        placeholder=\"First Name\"\n                        value={firstname}\n                        onChange={e => setFirstname(e.target.value)}\n                    />\n                    <br />\n                    <br />\n                    <TextField\n                        style={{backgroundColor:\"white\"}}\n                        label=\"Last Name\" \n                        variant=\"outlined\"\n                        placeholder=\"Last Name\"\n                        value={lastname}\n                        onChange={e => setLastName(e.target.value)}\n                    />\n                    <br />\n                    <br />\n                    <TextField\n                        style={{backgroundColor:\"white\"}}\n                        label=\"Email\" \n                        variant=\"outlined\"\n                        placeholder=\"Email\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                    <p style={{fontWeight:\"light\", color:\"grey\", fontSize:12}}>By signing up you agree that nanovert can distribute this data to any of its partners.</p>\n                    <Button variant=\"contained\" style={{marginBottom:\"5%\"}}>Sign Up</Button>\n                    {errorMessage}\n                </form>\n            </div> */}\n\n            <br/>\n            <br/>\n            \n            <div>\n                <p style={{color:\"darkslategrey\"}}>nanovertuk@gmail.com</p>\n                <small style={{color:\"darkslategrey\", paddingBottom:\"20px\"}}>Copyright &copy; 2019 - nanovert</small>\n            </div>\n            \n        </div>\n    )    \n}\n\nexport default HomePage;\n\n\n"]},"metadata":{},"sourceType":"module"}